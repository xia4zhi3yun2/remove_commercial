import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.io.RandomAccessFile;

import javax.sound.sampled.FloatControl;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSlider;
import javax.swing.Timer;
import javax.swing.border.TitledBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;


public class GUI extends JFrame{
	
	private InputStream ais=null;
	private InputStream vis=null;
	private Timer timer = null;
	private PlaySound sound=null;
	private PlayVideo video=null;
	private int period=0;
	
	private int audioPosition;
	private JSlider progress=null;
	
	
	//GUI componnet parts
	private JLabel lbScreen;
	private JPanel pnPanel0;
	private JButton btStartButton;
	private JButton btBut2;
	boolean isStart=true;
	public GUI(InputStream ais, InputStream vis,RandomAccessFile rf) {
		this.ais=ais;
		this.vis=vis;	
	
		sound=new PlaySound(ais);
		video=new PlayVideo(rf);
		period= 33;
		JPanel pannel=getMyLayout();
		getContentPane().add(pannel);
		pack();
		setVisible(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		audioPosition=0;
	}
	
	
	
	/**
	 * This Function is generated by java GUI tools
	 * @return Jpanel
	 */
	private JPanel getMyLayout() {
	
		pnPanel0 = new JPanel();
		pnPanel0.setBorder( BorderFactory.createTitledBorder( "Player" ) );
		GridBagLayout gbPanel0 = new GridBagLayout();
		GridBagConstraints gbcPanel0 = new GridBagConstraints();
		pnPanel0.setLayout( gbPanel0 );

	
		lbScreen = new JLabel(new ImageIcon(video.getNextFrame()));
		gbcPanel0.gridx = 0;
		gbcPanel0.gridy = 0;
		gbcPanel0.gridwidth = 28;
		gbcPanel0.gridheight = 18;
		gbcPanel0.fill = GridBagConstraints.BOTH;
		gbcPanel0.weightx = 1;
		gbcPanel0.weighty = 1;
		gbcPanel0.anchor = GridBagConstraints.NORTH;
		gbPanel0.setConstraints( lbScreen, gbcPanel0 );
		pnPanel0.add( lbScreen );

		btStartButton = new JButton( "Start/Pause"  );
		btStartButton.addActionListener(new StartPauseActionListner());
		gbcPanel0.gridx = 0;
		gbcPanel0.gridy = 18;
		gbcPanel0.gridwidth = 1;
		gbcPanel0.gridheight = 2;
		gbcPanel0.fill = GridBagConstraints.HORIZONTAL;
		gbcPanel0.weightx = 1;
		gbcPanel0.weighty = 2;
		gbcPanel0.anchor = GridBagConstraints.SOUTH;
		gbPanel0.setConstraints( btStartButton, gbcPanel0 );
		pnPanel0.add( btStartButton );
		
		
		progress = new JSlider(0, (int) (sound.getLength()), 0);
		//progress.setPaintTicks(true);
		progress.setMajorTickSpacing(20);
		progress.setMinorTickSpacing(5);
		progress.addChangeListener(new ChangeListener() {
			public void stateChanged(ChangeEvent e) {
				int value = progress.getValue();
				// If we're not already there, skip there.
				if (value != audioPosition)
					skip(value);
			}
		});    
		gbcPanel0.gridx = 1;
		gbcPanel0.gridy = 18;
		gbcPanel0.gridwidth = 0;
		gbcPanel0.gridheight = 2;
		gbcPanel0.fill = GridBagConstraints.HORIZONTAL;
		gbcPanel0.weightx = 1;
		gbcPanel0.weighty = 0;
		gbcPanel0.anchor = GridBagConstraints.SOUTH;
		gbPanel0.setConstraints( progress, gbcPanel0 );
		pnPanel0.add( progress );
	
		
		return pnPanel0;
		
	}
	

	
	public void run() {
		// millicsecond
		timer=new Timer(0, new ActionListener() {
			long last=System.currentTimeMillis();
			int frame_num=0;
			@Override
			public void actionPerformed(ActionEvent e) {
				tick();
				long tmp=System.currentTimeMillis();
				if ((tmp-last)>=period){
					update();
					last=tmp;
					frame_num++;
					if(frame_num==3){
						frame_num=0;
						period=34;
					}else{
						period=33;
					}	
				}
				
			}
		});

		timer.start();
		sound.play();
		tick();
	}
	public void update(){
		// updata vedio
		BufferedImage img=video.getNextFrame();
		Image scaledImage=img.getScaledInstance(lbScreen.getWidth(), lbScreen.getHeight(), Image.SCALE_DEFAULT);
		lbScreen.setIcon(null);
		ImageIcon icon=new ImageIcon(scaledImage);
		icon.getImage().flush();
		lbScreen.setIcon(icon);
		repaint();
		// update audio
	}
	
	
	public void skip(int position) { // Called when user drags the slider
	    if (position < 0 || position > (int)(sound.getLength()))
	      return;
	    sound.clip.setMicrosecondPosition(position * 1000*1000);
	    progress.setValue(position); 
	    video.jumpToFrame(position*30);
	    
	  }
	
	
	 void tick() {
		    audioPosition = (int) (sound.clip.getMicrosecondPosition()/1000000);
		    progress.setValue(audioPosition);
	}
	 

	private class StartPauseActionListner implements ActionListener{
		
		
		@Override
		public void actionPerformed(ActionEvent e) {
			if(isStart==true){
				isStart=false;
				timer.stop(); // times stop as a result video will stop 
				sound.pause();
			}else{
				isStart=true;
				timer.start();// times start as a result video will start 
				sound.resume();
			}
		}
		
	}

}
